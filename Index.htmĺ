<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>PocketMine Maps And Plugins - Futuristic Gaming Experience</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Arial', sans-serif;
            background: #0a0a0a;
            color: #fff;
            overflow-x: hidden;
            min-height: 100vh;
        }

        /* Fondo espacial animado */
        .cosmic-bg {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: -1;
            background: linear-gradient(45deg, #0f0f23, #1a0033, #000814);
            animation: cosmicShift 20s ease-in-out infinite alternate;
        }

        .stars {
            position: absolute;
            width: 100%;
            height: 100%;
        }

        .star {
            position: absolute;
            background: #fff;
            border-radius: 50%;
            animation: twinkle 3s ease-in-out infinite alternate;
        }

        .star:nth-child(odd) {
            animation-delay: 1s;
        }

        .star:nth-child(even) {
            animation-delay: 2s;
        }

        /* Nebula flotante */
        .nebula {
            position: absolute;
            width: 300px;
            height: 300px;
            border-radius: 50%;
            background: radial-gradient(circle, rgba(138, 43, 226, 0.3) 0%, rgba(75, 0, 130, 0.1) 50%, transparent 100%);
            animation: float 15s ease-in-out infinite;
            filter: blur(20px);
        }

        .nebula:nth-child(2) {
            top: 20%;
            right: 10%;
            width: 200px;
            height: 200px;
            background: radial-gradient(circle, rgba(0, 191, 255, 0.2) 0%, rgba(30, 144, 255, 0.1) 50%, transparent 100%);
            animation-delay: -5s;
        }

        .nebula:nth-child(3) {
            bottom: 30%;
            left: 15%;
            width: 250px;
            height: 250px;
            background: radial-gradient(circle, rgba(255, 20, 147, 0.25) 0%, rgba(199, 21, 133, 0.1) 50%, transparent 100%);
            animation-delay: -10s;
        }

        /* Header */
        .header {
            position: fixed;
            top: 0;
            width: 100%;
            padding: 20px 5%;
            background: rgba(0, 0, 0, 0.8);
            backdrop-filter: blur(10px);
            z-index: 1000;
            border-bottom: 1px solid rgba(138, 43, 226, 0.3);
            animation: slideDown 1s ease-out;
        }

        .nav {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .logo {
            font-size: 1.8rem;
            font-weight: bold;
            background: linear-gradient(45deg, #ff6b6b, #4ecdc4, #45b7d1, #96ceb4);
            background-size: 300% 300%;
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            animation: gradientShift 3s ease infinite;
        }

        .nav-links {
            display: flex;
            list-style: none;
            gap: 30px;
        }

        .nav-links a {
            color: #fff;
            text-decoration: none;
            transition: all 0.3s ease;
            position: relative;
        }

        .nav-links a:hover {
            color: #4ecdc4;
            text-shadow: 0 0 10px #4ecdc4;
        }

        .nav-links a::after {
            content: '';
            position: absolute;
            bottom: -5px;
            left: 0;
            width: 0;
            height: 2px;
            background: linear-gradient(90deg, #4ecdc4, #45b7d1);
            transition: width 0.3s ease;
        }

        .nav-links a:hover::after {
            width: 100%;
        }

        /* Hero Section */
        .hero {
            height: 100vh;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            text-align: center;
            position: relative;
            padding: 0 5%;
        }

        .hero-title {
            font-size: clamp(2.5rem, 8vw, 6rem);
            font-weight: bold;
            margin-bottom: 20px;
            background: linear-gradient(45deg, #ff6b6b, #4ecdc4, #45b7d1, #96ceb4, #ffeaa7);
            background-size: 400% 400%;
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            animation: gradientShift 4s ease infinite, slideUp 1s ease-out;
            text-shadow: 0 0 50px rgba(78, 205, 196, 0.5);
        }

        .hero-subtitle {
            font-size: clamp(1.2rem, 4vw, 2rem);
            margin-bottom: 30px;
            opacity: 0.9;
            animation: slideUp 1s ease-out 0.3s both;
        }

        .hero-description {
            font-size: clamp(1rem, 2vw, 1.2rem);
            margin-bottom: 40px;
            max-width: 600px;
            line-height: 1.6;
            opacity: 0.8;
            animation: slideUp 1s ease-out 0.6s both;
        }

        .cta-buttons {
            display: flex;
            gap: 20px;
            flex-wrap: wrap;
            justify-content: center;
            animation: slideUp 1s ease-out 0.9s both;
        }

        .cta-btn {
            padding: 15px 30px;
            border: none;
            border-radius: 50px;
            font-size: 1.1rem;
            font-weight: bold;
            text-decoration: none;
            display: inline-block;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        .cta-primary {
            background: linear-gradient(45deg, #ff6b6b, #4ecdc4);
            color: white;
            box-shadow: 0 10px 30px rgba(255, 107, 107, 0.3);
        }

        .cta-secondary {
            background: transparent;
            color: #4ecdc4;
            border: 2px solid #4ecdc4;
            box-shadow: 0 10px 30px rgba(78, 205, 196, 0.2);
        }

        .cta-btn:hover {
            transform: translateY(-3px);
            box-shadow: 0 20px 40px rgba(255, 107, 107, 0.4);
        }

        .cta-secondary:hover {
            background: #4ecdc4;
            color: #0a0a0a;
            box-shadow: 0 20px 40px rgba(78, 205, 196, 0.4);
        }

        .cta-btn::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
            transition: left 0.5s ease;
        }

        .cta-btn:hover::before {
            left: 100%;
        }

        /* Floating particles */
        .particle {
            position: absolute;
            background: #4ecdc4;
            border-radius: 50%;
            pointer-events: none;
            animation: floatParticle 10s linear infinite;
        }

        /* Features Section */
        .features {
            padding: 100px 5%;
            background: rgba(0, 0, 0, 0.3);
            backdrop-filter: blur(5px);
        }

        .features-title {
            text-align: center;
            font-size: clamp(2rem, 5vw, 3.5rem);
            margin-bottom: 60px;
            background: linear-gradient(45deg, #4ecdc4, #45b7d1);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }

        .features-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 30px;
            max-width: 1200px;
            margin: 0 auto;
        }

        .feature-card {
            background: rgba(255, 255, 255, 0.05);
            border: 1px solid rgba(78, 205, 196, 0.3);
            border-radius: 20px;
            padding: 30px;
            text-align: center;
            transition: all 0.3s ease;
            backdrop-filter: blur(10px);
        }

        .feature-card:hover {
            transform: translateY(-10px);
            border-color: #4ecdc4;
            box-shadow: 0 20px 40px rgba(78, 205, 196, 0.2);
        }

        .feature-icon {
            font-size: 3rem;
            margin-bottom: 20px;
            display: block;
        }

        .feature-card h3 {
            font-size: 1.5rem;
            margin-bottom: 15px;
            color: #4ecdc4;
        }

        /* Responsive */
        @media (max-width: 768px) {
            .nav-links {
                display: none;
            }

            .cta-buttons {
                flex-direction: column;
                align-items: center;
            }

            .hero-title {
                font-size: 3rem;
            }
        }

        /* Animations */
        @keyframes cosmicShift {
            0% { background: linear-gradient(45deg, #0f0f23, #1a0033, #000814); }
            50% { background: linear-gradient(45deg, #1a0033, #000814, #0f0f23); }
            100% { background: linear-gradient(45deg, #000814, #0f0f23, #1a0033); }
        }

        @keyframes twinkle {
            0% { opacity: 0.3; transform: scale(1); }
            100% { opacity: 1; transform: scale(1.2); }
        }

        @keyframes float {
            0%, 100% { transform: translateY(0px) rotate(0deg); }
            33% { transform: translateY(-30px) rotate(120deg); }
            66% { transform: translateY(20px) rotate(240deg); }
        }

        @keyframes gradientShift {
            0% { background-position: 0% 50%; }
            50% { background-position: 100% 50%; }
            100% { background-position: 0% 50%; }
        }

        @keyframes slideDown {
            from { transform: translateY(-100%); opacity: 0; }
            to { transform: translateY(0); opacity: 1; }
        }

        @keyframes slideUp {
            from { transform: translateY(50px); opacity: 0; }
            to { transform: translateY(0); opacity: 1; }
        }

        @keyframes floatParticle {
            0% { transform: translateY(100vh) rotate(0deg); opacity: 0; }
            10% { opacity: 1; }
            90% { opacity: 1; }
            100% { transform: translateY(-100px) rotate(360deg); opacity: 0; }
        }
    </style>
</head>
<body>
    <!-- Fondo cósmico -->
    <div class="cosmic-bg">
        <div class="stars" id="stars"></div>
        <div class="nebula"></div>
        <div class="nebula"></div>
        <div class="nebula"></div>
    </div>

    <!-- Header -->
    <header class="header">
        <nav class="nav">
            <div class="logo">PocketMine Maps & Plugins</div>
            <ul class="nav-links">
                <li><a href="#home">Inicio</a></li>
                <li><a href="#plugins">Plugins</a></li>
                <li><a href="#maps">Mapas</a></li>
                <li><a href="#contact">Contacto</a></li>
            </ul>
        </nav>
    </header>

    <!-- Hero Section -->
    <section class="hero" id="home">
        <h1 class="hero-title">NEXUS COSMIC PLUGINS</h1>
        <h2 class="hero-subtitle">El Futuro de PocketMine está Aquí</h2>
        <p class="hero-description">
            Descubre plugins revolucionarios y mapas épicos diseñados para llevar tu servidor de Minecraft Bedrock a otra dimensión. 
            Tecnología de vanguardia, efectos cinematográficos y experiencias que dejarán sin aliento a tus jugadores.
        </p>
        <div class="cta-buttons">
            <a href="#plugins" class="cta-btn cta-primary">Explorar Plugins</a>
            <a href="#contact" class="cta-btn cta-secondary">Contactar</a>
        </div>
    </section>

    <!-- Features Section -->
    <section class="features" id="features">
        <h2 class="features-title">¿Por Qué Elegir Nuestros Plugins?</h2>
        <div class="features-grid">
            <div class="feature-card">
                <span class="feature-icon">🚀</span>
                <h3>Ultra Optimizados</h3>
                <p>Plugins desarrollados con las mejores prácticas, sin lag, máximo rendimiento para tu servidor.</p>
            </div>
            <div class="feature-card">
                <span class="feature-icon">⚡</span>
                <h3>Efectos Cinematográficos</h3>
                <p>Partículas, sonidos y animaciones que crean experiencias visuales impresionantes.</p>
            </div>
            <div class="feature-card">
                <span class="feature-icon">🛡️</span>
                <h3>Anti-Cheat Integrado</h3>
                <p>Sistemas de protección avanzados incluidos en todos nuestros plugins premium.</p>
            </div>
            <div class="feature-card">
                <span class="feature-icon">💎</span>
                <h3>Soporte 24/7</h3>
                <p>Equipo dedicado para resolver cualquier duda o problema que tengas.</p>
            </div>
            <div class="feature-card">
                <span class="feature-icon">🔧</span>
                <h3>Personalizable</h3>
                <p>Configura cada aspecto según las necesidades específicas de tu servidor.</p>
            </div>
            <div class="feature-card">
                <span class="feature-icon">📈</span>
                <h3>Actualizaciones Gratis</h3>
                <p>Recibe todas las actualizaciones y nuevas funciones sin costo adicional.</p>
            </div>
        </div>
    </section>

    <script>
        // Generar estrellas aleatorias
        function createStars() {
            const starsContainer = document.getElementById('stars');
            const numStars = 150;

            for (let i = 0; i < numStars; i++) {
                const star = document.createElement('div');
                star.className = 'star';
                star.style.left = Math.random() * 100 + '%';
                star.style.top = Math.random() * 100 + '%';
                star.style.width = Math.random() * 3 + 1 + 'px';
                star.style.height = star.style.width;
                star.style.animationDuration = Math.random() * 3 + 2 + 's';
                starsContainer.appendChild(star);
            }
        }

        // Crear partículas flotantes
        function createParticles() {
            setInterval(() => {
                if (document.querySelectorAll('.particle').length < 5) {
                    const particle = document.createElement('div');
                    particle.className = 'particle';
                    particle.style.left = Math.random() * 100 + '%';
                    particle.style.width = Math.random() * 6 + 2 + 'px';
                    particle.style.height = particle.style.width;
                    particle.style.animationDuration = Math.random() * 5 + 5 + 's';
                    document.body.appendChild(particle);

                    setTimeout(() => {
                        particle.remove();
                    }, 10000);
                }
            }, 2000);
        }

        // Smooth scrolling
        document.querySelectorAll('a[href^="#"]').forEach(anchor => {
            anchor.addEventListener('click', function (e) {
                e.preventDefault();
                const target = document.querySelector(this.getAttribute('href'));
                if (target) {
                    target.scrollIntoView({
                        behavior: 'smooth',
                        block: 'start'
                    });
                }
            });
        });

        // Efecto parallax para el hero
        window.addEventListener('scroll', () => {
            const scrolled = window.pageYOffset;
            const hero = document.querySelector('.hero');
            const rate = scrolled * -0.5;
            hero.style.transform = `translateY(${rate}px)`;
        });

        // Inicializar efectos
        document.addEventListener('DOMContentLoaded', () => {
            createStars();
            createParticles();
        });

        // Animación de entrada para las cards
        const observerOptions = {
            threshold: 0.1,
            rootMargin: '0px 0px -100px 0px'
        };

        const observer = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    entry.target.style.animation = 'slideUp 0.6s ease-out forwards';
                }
            });
        }, observerOptions);

        document.querySelectorAll('.feature-card').forEach(card => {
            observer.observe(card);
        });
    </script>
</body>
</html>